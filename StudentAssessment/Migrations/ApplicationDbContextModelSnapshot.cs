// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentAssessment.Data;

#nullable disable

namespace StudentAssessment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StudentAssessment.Data.Attendance", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceID"), 1L, 1);

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DaysAttended")
                        .HasColumnType("int");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("AttendanceID");

                    b.HasIndex("StudentID");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("StudentAssessment.Data.LessonsLearned", b =>
                {
                    b.Property<int>("AttendanceID")
                        .HasColumnType("int");

                    b.Property<string>("Art")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Letters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Math")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyanmarLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Science")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialStudies")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceID");

                    b.ToTable("LessonsLearned");
                });

            modelBuilder.Entity("StudentAssessment.Data.PhysicalDev", b =>
                {
                    b.Property<int>("AttendanceID")
                        .HasColumnType("int");

                    b.Property<int>("CombineBodyPart")
                        .HasColumnType("int");

                    b.Property<int>("FineMotorSkill")
                        .HasColumnType("int");

                    b.Property<int>("GrossMotorSkill")
                        .HasColumnType("int");

                    b.HasKey("AttendanceID");

                    b.ToTable("PhysicalDev");
                });

            modelBuilder.Entity("StudentAssessment.Data.SocialEmotionDev", b =>
                {
                    b.Property<int>("AttendanceID")
                        .HasColumnType("int");

                    b.Property<int?>("Confidence")
                        .HasColumnType("int");

                    b.Property<int?>("Participation")
                        .HasColumnType("int");

                    b.Property<int?>("RespondOthers")
                        .HasColumnType("int");

                    b.Property<int?>("SelfControl")
                        .HasColumnType("int");

                    b.Property<int?>("Sharing")
                        .HasColumnType("int");

                    b.Property<int?>("SocalizingFriends")
                        .HasColumnType("int");

                    b.HasKey("AttendanceID");

                    b.ToTable("SocialEmotionDev");
                });

            modelBuilder.Entity("StudentAssessment.Data.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"), 1L, 1);

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("StudentAssessment.Data.WorkHabit", b =>
                {
                    b.Property<int>("AttendanceID")
                        .HasColumnType("int");

                    b.Property<int?>("AskingQuestion")
                        .HasColumnType("int");

                    b.Property<int?>("Attention")
                        .HasColumnType("int");

                    b.Property<int?>("FollowingInstruction")
                        .HasColumnType("int");

                    b.Property<int?>("MakingChoice")
                        .HasColumnType("int");

                    b.Property<int?>("StayingOnTask")
                        .HasColumnType("int");

                    b.HasKey("AttendanceID");

                    b.ToTable("WorkHabit");
                });

            modelBuilder.Entity("StudentAssessment.Data.Attendance", b =>
                {
                    b.HasOne("StudentAssessment.Data.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentAssessment.Data.LessonsLearned", b =>
                {
                    b.HasOne("StudentAssessment.Data.Attendance", "Attendance")
                        .WithOne("LessonsLearned")
                        .HasForeignKey("StudentAssessment.Data.LessonsLearned", "AttendanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");
                });

            modelBuilder.Entity("StudentAssessment.Data.PhysicalDev", b =>
                {
                    b.HasOne("StudentAssessment.Data.Attendance", "Attendance")
                        .WithOne("PhysicalDev")
                        .HasForeignKey("StudentAssessment.Data.PhysicalDev", "AttendanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");
                });

            modelBuilder.Entity("StudentAssessment.Data.SocialEmotionDev", b =>
                {
                    b.HasOne("StudentAssessment.Data.Attendance", "Attendance")
                        .WithOne("SocialEmotionDev")
                        .HasForeignKey("StudentAssessment.Data.SocialEmotionDev", "AttendanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");
                });

            modelBuilder.Entity("StudentAssessment.Data.WorkHabit", b =>
                {
                    b.HasOne("StudentAssessment.Data.Attendance", "Attendance")
                        .WithOne("WorkHabit")
                        .HasForeignKey("StudentAssessment.Data.WorkHabit", "AttendanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");
                });

            modelBuilder.Entity("StudentAssessment.Data.Attendance", b =>
                {
                    b.Navigation("LessonsLearned");

                    b.Navigation("PhysicalDev");

                    b.Navigation("SocialEmotionDev");

                    b.Navigation("WorkHabit");
                });

            modelBuilder.Entity("StudentAssessment.Data.Student", b =>
                {
                    b.Navigation("Attendances");
                });
#pragma warning restore 612, 618
        }
    }
}
